syntax = "proto2";

import "grr/proto/jobs.proto";
import "grr/proto/semantic.proto";




// Proto representation of an Collector.
message Collector {

  enum CollectorType {
    COLLECTOR_TYPE_UNKNOWN = 0;
    FILE = 1;
    REGISTRY_KEY = 2;
    REGISTRY_VALUE = 3;
    WMI = 4;
    ARTIFACT = 5;

    // TODO(user): these types will likely be separated out from artifacts in
    // the future
    GRR_CLIENT_ACTION = 40;
    LIST_FILES = 41;
    ARTIFACT_FILES = 42;
    GREP = 43;

    COMMAND = 45;
    REKALL_PLUGIN = 46;

  };

  optional CollectorType collector_type = 1 [(sem_type) = {
      description: "The type of collector.",
    }];

  optional Dict args = 2 [(sem_type) = {
      description: "The name of the action the collector performs.",
    }];

  repeated string conditions = 3 [(sem_type) = {
      description: "Object filter conditions that decide if this collector will"
        " run on a given system.",
    }];

  repeated string returned_types = 4 [(sem_type) = {
      description: "A list types that may be returned by this artifact. "
        "Anything returned that is not in this list will be filtered.",
    }];

  repeated string supported_os = 5 [(sem_type) = {
      description: "A list of operating systems the collector will use to "
                  "decide if it should run on a given system.",
    }];

}


// Proto representation of an artifact.
message Artifact {
  optional string name = 1 [(sem_type) = {
      description: "Globally unique name of the artifact.",
    }];

  repeated string conditions = 2 [(sem_type) = {
      description: "A list of conditions that decide if the artifact should "
        "run.",
    }];

  optional string doc = 3 [(sem_type) = {
      description: "Doc string for the artifact.",
    }];

  repeated string labels = 4 [(sem_type) = {
      description: "A list of labels the artifact belongs to.",
    }];

  repeated string supported_os = 5 [(sem_type) = {
      description: "A list of operating systems the artifact supports.",
    }];

  repeated string urls = 6 [(sem_type) = {
    description: "A list of urls that help document the artifact.",
  }];

  repeated Collector collectors = 7 [(sem_type) = {
    description: "A list of artifact collectors.",
  }];

  repeated string provides = 8 [(sem_type) = {
      description: "A list of knowledgebase values this artifact provides.",
    }];

}
