// Protobufs used to export data from AFF4 to the outside world.

syntax = "proto2";

import "grr/proto/jobs.proto";
import "grr/proto/sysinfo.proto";
import "grr/proto/semantic.proto";


message ExportOptions {
  optional bool export_files_contents = 1 [ default = false, (sem_type) = {
      description: "If this is true, open files and export their full or "
      "partial contents. Note: this may require additional datastore "
      "roundtrips and slow down the export process, also exporting file "
      "contents may significantly increase size of the exported data."
    }];
  optional bool follow_urns = 2 [ default = false, (sem_type) = {
      description: "If this is true, follow urns and try to export not only "
      "the urns themselves, but also the data they are pointing to. Note: "
      "this may require additional datastore roundtrips and slow down the "
      "export process."
    }];
  optional bool export_files_hashes = 3 [ default = false, (sem_type) = {
      description: "If this is true, export hashes when dealing with "
      "file-related values. The files are not gonna be hashed during the "
      "export, hashes will only be exported if they were collected before "
      "the export. This option affects exporting VFSFile and StatEntry "
      "RDFValues. Note: setting this option to true may require additional "
      "datastore roundtrips and slow down the export process."
    }];
  repeated string annotations = 4 [(sem_type) = {
      description: "Annotations to add to exported data. This field can be "
                   "used to differentiate sets of exported data inside a "
                   "particular exported type. e.g. data collected by users "
                   "vs. data collected by cronjob."
    }];

}

message ExportedMetadata {
  // Next field ID: 16

  optional string client_urn = 1 [(sem_type) = {
      type: "ClientURN",
      description: "Client ID of a client that contains this entry."
    }];
  optional string hostname = 2;
  optional string os = 3;
  optional uint64 client_age = 4 [(sem_type) = {
      type: "RDFDatetime",
      description: "Age of the client."
    }];
  optional string uname = 5;
  optional string os_release = 6;
  optional string os_version = 7;
  optional string usernames = 8;
  optional string mac_address = 9;

  optional uint64 timestamp = 10 [(sem_type) = {
      type: "RDFDatetime",
      description: "When data was exported."
    }];

  optional uint64 original_timestamp = 15 [(sem_type) = {
      type: "RDFDatetime",
      description: "When original data was generated."
    }];

  // BEGIN DEPRECATED
  optional string deprecated_session_id = 11 [(sem_type) = {
      type: "SessionID",
      description: "Session id of a hunt that collected the data."
    }, deprecated=true];
  // END_DEPRECATED

  optional string labels = 12 [(sem_type) = {
      description: "CSV list of client labels."
    }];

  optional string source_urn = 13 [(sem_type) = {
      type: "RDFURN",
      description: "URN of a source of exported data."
    }];

  optional string annotations = 14 [(sem_type) = {
      description: "CSV list of annotations for this data. This field can be "
                   "used to differentiate sets of exported data inside a "
                   "particular exported type. e.g. data collected by users "
                   "vs. data collected by cronjob."
    }];

}

message ExportedClient {
  optional ExportedMetadata metadata = 1;
}

message ExportedNetworkInterface {
  optional ExportedMetadata metadata = 1;

  optional string mac_address = 2;
  optional string ifname = 3;
  optional string ip4_addresses = 4;
  optional string ip6_addresses = 5;
}

message ExportedDNSClientConfiguration {
  optional ExportedMetadata metadata = 1;

  optional string dns_servers = 2;
  optional string dns_suffixes = 3;
}

message ExportedFile {
  optional ExportedMetadata metadata = 1;

  optional string urn = 2 [(sem_type) = {
      type: "RDFURN",
      description: "The location of this file in the AFF4 space."
    }];

  optional string basename = 3 [(sem_type) = {
      description: "Basename of the file."
    }];

  optional uint64 st_mode = 4 [(sem_type) = {
      type: "StatMode",
      description: "A unix file permission mode."
    }];

  optional uint32 st_ino = 5;
  optional uint32 st_dev = 6;
  optional uint32 st_nlink = 7;
  optional uint32 st_uid = 8;
  optional uint32 st_gid = 9;
  optional uint64 st_size = 10;
  optional uint64 st_atime = 11 [(sem_type) = {
      type: "RDFDatetimeSeconds",
      description: "Last access time."
    }];

  optional uint64 st_mtime = 12 [(sem_type) = {
      type: "RDFDatetimeSeconds",
      description: "Last modified time."
    }];

  optional uint64 st_ctime = 13 [(sem_type) = {
      type: "RDFDatetimeSeconds",
      description: "Last inode change time."
    }];

  optional uint32 st_blocks = 14;
  optional uint32 st_blksize = 15;
  optional uint32 st_rdev = 16;
  optional string symlink = 17;

  optional bytes content = 18;  // Actual content of the file if available.
  optional string content_sha256 = 19;  // sha256 of content.

  // client reported values for the hashes
  optional string hash_md5 = 20;
  optional string hash_sha1 = 21;
  optional string hash_sha256 = 22;

  // pecoff hashes
  optional string pecoff_hash_md5 = 23;
  optional string pecoff_hash_sha1 = 24;

  // certificates data
  optional string cert_hasher_name = 25;
  optional string cert_program_name = 26;
  optional string cert_program_url = 27;
  optional string cert_signing_id = 28;
  optional string cert_chain_head_issuer = 29;
  optional string cert_countersignature_chain_head_issuer = 30;
  optional string cert_certificates = 31;
}

message ExportedRegistryKey {
  optional ExportedMetadata metadata = 1;

  optional string urn = 2 [(sem_type) = {
      type: "RDFURN",
      description: "URN of the registry key."
    }];
  optional uint64 last_modified = 3 [(sem_type) = {
      type: "RDFDatetimeSeconds",
      description: "Last modified timestamp."
    }];
  optional StatEntry.RegistryType type = 4;
  optional bytes data = 5;
}

message ExportedProcess {
  optional ExportedMetadata metadata = 1;

  optional uint32 pid = 2;
  optional uint32 ppid = 3;
  optional string name = 4;
  optional string exe = 5;
  optional string cmdline = 6;
  optional uint64 ctime = 7;
  optional uint32 real_uid = 8;
  optional uint32 effective_uid = 9;
  optional uint32 saved_uid = 10;
  optional uint32 real_gid = 11;
  optional uint32 effective_gid = 12;
  optional uint32 saved_gid = 13;
  optional string username = 14;
  optional string terminal = 15;
  optional string status = 16;
  optional int32 nice = 17;
  optional string cwd = 18;
  optional uint32 num_threads = 19;
  optional float user_cpu_time = 20;
  optional float system_cpu_time = 21;
  optional float cpu_percent = 22;
  optional uint64 rss_size = 23;
  optional uint64 vms_size = 24;
  optional float memory_percent = 25;
}

message ExportedNetworkConnection {
  optional ExportedMetadata metadata = 1;

  optional NetworkConnection.Family family = 2;
  optional NetworkConnection.Type type = 3 [default = UNKNOWN_SOCKET];
  optional NetworkEndpoint local_address = 4;
  optional NetworkEndpoint remote_address = 5;
  optional NetworkConnection.State state = 6 [default = UNKNOWN];
  optional uint32 pid = 7;
  optional uint64 ctime = 8;
}

message ExportedOpenFile {
  optional ExportedMetadata metadata = 1;

  optional uint32 pid = 2;
  optional string path = 3;
}

message ExportedFileStoreHash {
  optional ExportedMetadata metadata = 1;

  optional string hash = 2;
  optional string hash_type = 3;
  optional string fingerprint_type = 4;
  optional string target_urn = 5 [(sem_type) = {
      type: "RDFURN",
    }];
}

message ExportedSoftware {
  optional ExportedMetadata metadata = 1;
  optional SoftwarePackage software = 2;
}

message ExportedMatch {
  optional ExportedMetadata metadata = 1;
  optional uint64 offset = 2;
  optional uint64 length = 3;
  optional bytes data = 4;
  optional string urn = 5 [(sem_type) = {
      type: "RDFURN",
      description: "The location of this file in the AFF4 space."
    }];
}

message ExportedBytes {
  optional ExportedMetadata metadata = 1;

  optional bytes data = 2;
  optional uint64 length = 3;
}
